	SUBROUTINE MOON(T,PM)
C
C	LUNAR EPHEMERIS BY NED WRIGHT 29-MAR-83
C
C	T IS REAL*8 SECONDS SINCE 5/24/68 00:00:00 UTC
C	PM IS UNIT VECTOR IN RA AND DEC, J2000 SYSTEM
C
	REAL*8 T,T1,T2,TOLDEPOCH
	REAL*4 PM(3),XYZ(3),C(3)
	REAL*4 P1(3) /0.,0.,0./
	REAL*4 P2(3) /0.,0.,0./
	REAL*4 PRECES(3,3) /1.,0.,0.,0.,1.,0.,0.,0.,1./
	SAVE P1,P2,PRECES,T1,T2,TOLDEPOCH
	DATA TOLDEPOCH/-9999.D10/
	DATA T1,T2/1.D0,-1.D0/
	IF (ABS(T-TOLDEPOCH).GT.3.D6) THEN
	  TOLDEPOCH=T
	  CALL GET_EPOCH(T,EPOCH)
	  CALL PREMAT(EPOCH,PRECES)
	  DO I=1,3
	    PRECES(I,I)=PRECES(I,I)+1.0
	  ENDDO
	ENDIF
	IF (T.GE.T1 .AND. T.LE.T2) GO TO 100
	T1=T
C	GET GEOCENTRIC POSITIONS OF MOON AND COBE
	CALL GCMOON(T1,P1)
	CALL ORBIT(T1,C)
	CALL VMAT(PRECES,C,XYZ)
C	GET RELATIVE POSITION WHICH ALLOWS FOR HORIZONTAL PARALLAX
	DO 10 I=1,3
10	P1(I)=P1(I)-XYZ(I)
C	NORMALIZE FOR A UNIT VECTOR
	CALL NORM(P1)
C	REPEAT FOR ENDPOINT OF INTERPOLATION INTERVAL
	T2=T+300.D0
	CALL GCMOON(T2,P2)
	CALL ORBIT(T2,C)
	CALL VMAT(PRECES,C,XYZ)
	DO 20 I=1,3
20	P2(I)=P2(I)-XYZ(I)
	CALL NORM(P2)
C	GET VELOCITY
	DO 30 I=1,3
30	P2(I)=P2(I)-P1(I)
C
C	LINEAR INTERPOLATION
C
100	X=(T-T1)/(T2-T1)
	DO 110 I=1,3
110	PM(I)=P1(I)+X*P2(I)
	CALL NORM(PM)
	RETURN
	END
