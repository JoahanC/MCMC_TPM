      SUBROUTINE SGP4(IFLAG,TSINCE)
      IMPLICIT REAL*8 (A-H,O-Z)
	INTEGER IFLAG
	REAL*8 TSINCE
      COMMON/E1/EPOCH,DS50,XMO,XNODEO,OMEGAO,EO,XINCL,XNO,XNDT2O,
     1           XNDD6O,BSTAR,X,Y,Z,XDOT,YDOT,ZDOT
	PARAMETER (E6A=1.D-6,QO=120.D0,SO=78.D0,TOTHRD=2.D0/3.D0)
	PARAMETER (XJ2=1.082616D-3,XJ3=-.253881D-5,XJ4=-1.65597D-6)
	PARAMETER (XKE=.743669161D-1,XKMPER=6378.135,XMNPDA=1440.D0)
	PARAMETER (AE=1.D0)
	PARAMETER (CK2=0.5D0*XJ2*AE**2,CK4=-.375D0*XJ4*AE**4)
	PARAMETER (QOMS2T=((QO-SO)*AE/XKMPER)**4,S=AE*(1.D0+SO/XKMPER))
	REAL*8 FMOD2P, ACTAN
	INTEGER ISIMP, I
	SAVE
C
C     IF (IFLAG .EQ. 0) GO TO 100
C
C      RECOVER ORIGINAL MEAN MOTION (XNODP) AND SEMIMAJOR AXIS (AODP)
C      FROM INPUT ELEMENTS
C
      A1=(XKE/XNO)**TOTHRD
      COSIO=DCOS(XINCL)
      THETA2=COSIO*COSIO
      X3THM1=3.D0*THETA2-1.D0
      EOSQ=EO*EO
      BETAO2=1.D0-EOSQ
      BETAO=DSQRT(BETAO2)
      DEL1=1.5D0*CK2*X3THM1/(A1*A1*BETAO*BETAO2)
      AO=A1*(1.D0-DEL1*(0.5D0*TOTHRD+DEL1*(1.D0+(134.D0/81.D0)*DEL1)))
      DELO=1.5D0*CK2*X3THM1/(AO*AO*BETAO*BETAO2)
      XNODP=XNO/(1.D0+DELO)
      AODP=AO/(1.D0-DELO)
C
C	write (*,*) ' a1,cosio,theta2,x3thm1,eosq,betao2,betao=',
C	1	a1,cosio,theta2,x3thm1,eosq,betao2,betao
C	write (*,*) ' del1,ao,delo,xndop,aodp = ',
C	1	dela,ao,delo,xnodp,aodp
C
C      INITIALIZATION
C
C      FOR PERIGEE LESS THAN 220 KILOMETERS, THE ISIMP FLAG IS SET AND
C      THE EQUATIONS ARE TRUNCATED TO LINEAR VARIATION IN SQRT A AND
C      QUADRATIC VARIATION IN MEAN ANOMALY.  ALSO, THE C3 TERM, THE
C      DELTA OMEGA TERM, AND THE DELTA M TERM ARE DROPPED.
C
      ISIMP=0
      IF((AODP*(1.D0-EO)/AE) .LT. (220.D0/XKMPER+AE)) ISIMP=1
C
C      FOR PERIGEE BELOW 156 KM, THE VALUES OF
C      S AND QOMS2T ARE ALTERED
C
      S4=S
      QOMS24=QOMS2T
      PERIGE=(AODP*(1.-EO)-AE)*XKMPER
      IF(PERIGE .GE. 156.) GO TO 10
      S4=PERIGE-78.D0
      IF (PERIGE .GT. 98.) GO TO 9
      S4=20.
    9 QOMS24=((120.D0-S4)*AE/XKMPER)**4
      S4=S4/XKMPER+AE
   10 PINVSQ=1.D0/(AODP*AODP*BETAO2*BETAO2)
      TSI=1.D0/(AODP-S4)
      ETA=AODP*EO*TSI
      ETASQ=ETA*ETA
      EETA=EO*ETA
      PSISQ=DABS(1.D0-ETASQ)
      COEF=QOMS24*TSI**4
      COEF1=COEF/PSISQ**3.5D0
      C2=COEF1*XNODP*(AODP*(1.D0+1.5D0*ETASQ+EETA*(4.+ETASQ))+.75D0*
     1         CK2*TSI/PSISQ*X3THM1*(8.D0+3.D0*ETASQ*(8.D0+ETASQ)))
      C1=BSTAR*C2
      SINIO=DSIN(XINCL)
      A3OVK2=-XJ3/CK2*AE**3
      C3=COEF*TSI*A3OVK2*XNODP*AE*SINIO/EO
      X1MTH2=1.-THETA2
      C4=2.*XNODP*COEF1*AODP*BETAO2*(ETA*
     1         (2.D0+.5D0*ETASQ)+EO*(.5D0+2.D0*ETASQ)-2.D0*CK2*(TSI/
     2         (AODP*PSISQ))*(-3.D0*X3THM1*(1.D0-2.D0*EETA+ETASQ*
     3         (1.5D0-.5D0*EETA))+.75D0*X1MTH2*(2.D0*ETASQ-EETA*
     4         (1.D0+ETASQ))*DCOS(2.D0*OMEGAO)))
	CALL JUNK(C4)
C        write (*,*) c4
      C5=2.*COEF1*AODP*BETAO2*(1.D0+2.75D0*(ETASQ+EETA)+EETA*ETASQ)
      THETA4=THETA2*THETA2
      TEMP1=3.D0*CK2*PINVSQ*XNODP
      TEMP2=TEMP1*CK2*PINVSQ
      TEMP3=1.25D0*CK4*PINVSQ*PINVSQ*XNODP
      XMDOT=XNODP+.5D0*TEMP1*BETAO*X3THM1+.0625D0*TEMP2*BETAO*
     1         (13.D0-78.D0*THETA2+137.D0*THETA4)
      X1M5TH=1.D0-5.D0*THETA2
      OMGDOT=-.5D0*TEMP1*X1M5TH+.0625D0*TEMP2*(7.D0-114.D0*THETA2+
     1         395.D0*THETA4)+TEMP3*(3.D0-36.D0*THETA2+49.D0*THETA4)
	CALL JUNK(OMGDOT)
      XHDOT1=-TEMP1*COSIO
      XNODOT=XHDOT1+(.5D0*TEMP2*(4.D0-19.D0*THETA2)+2.D0*TEMP3*(3.D0-
     1         7.D0*THETA2))*COSIO
      OMGCOF=BSTAR*C3*DCOS(OMEGAO)
      XMCOF=-TOTHRD*COEF*BSTAR*AE/EETA
      XNODCF=3.5D0*BETAO2*XHDOT1*C1
      T2COF=1.5D0*C1
      XLCOF=.125D0*A3OVK2*SINIO*(3.D0+5.D0*COSIO)/(1.D0+COSIO)
      AYCOF=.25D0*A3OVK2*SINIO
      DELMO=(1.D0+ETA*DCOS(XMO))**3
      SINMO=DSIN(XMO)
      X7THM1=7.D0*THETA2-1.D0
      IF(ISIMP .EQ. 1) GO TO 90
      C1SQ=C1*C1
      D2=4.D0*AODP*TSI*C1SQ
      TEMP=D2*TSI*C1/3.D0
      D3=(17.D0*AODP+S4)*TEMP
      D4=.5D0*TEMP*AODP*TSI*(221.D0*AODP+31.D0*S4)*C1
      T3COF=D2+2.D0*C1SQ
      T4COF=.25D0*(3.D0*D3+C1*(12.D0*D2+10.D0*C1SQ))
      T5COF=.2D0*(3.D0*D4+12.D0*C1*D3+6.D0*D2*D2+15.D0*C1SQ*(
     1         2.D0*D2+C1SQ))
	CALL JUNK(T5COF)
   90 IFLAG=0
C
C	write (*,*) 'ISIMP, BSTAR = ', ISIMP, BSTAR
C	write (*,*) ' C1..C5 =',C1,C2,C3,C4,C5
C      UPDATE FOR SECULAR GRAVITY AND ATMOSPHERIC DRAG
C
  100 XMDF=XMO+XMDOT*TSINCE
      OMGADF=OMEGAO+OMGDOT*TSINCE
      XNODDF=XNODEO+XNODOT*TSINCE
      OMEGA=OMGADF
      XMP=XMDF
      TSQ=TSINCE*TSINCE
      XNODE=XNODDF+XNODCF*TSQ
      TEMPA=1.D0-C1*TSINCE
      TEMPE=BSTAR*C4*TSINCE
      TEMPL=T2COF*TSQ
      IF(ISIMP .EQ. 1) GO TO 110
      DELOMG=OMGCOF*TSINCE
      DELM=XMCOF*((1.D0+ETA*DCOS(XMDF))**3-DELMO)
      TEMP=DELOMG+DELM
      XMP=XMDF+TEMP
      OMEGA=OMGADF-TEMP
      TCUBE=TSQ*TSINCE
      TFOUR=TSINCE*TCUBE
      TEMPA=TEMPA-D2*TSQ-D3*TCUBE-D4*TFOUR
      TEMPE=TEMPE+BSTAR*C5*(DSIN(XMP)-SINMO)
      TEMPL=TEMPL+T3COF*TCUBE+
     1         TFOUR*(T4COF+TSINCE*T5COF)
  110 A=AODP*TEMPA**2
      E=EO-TEMPE
      XL=XMP+OMEGA+XNODE+XNODP*TEMPL
      BETA=DSQRT(1.D0-E*E)
      XN=XKE/A**1.5D0
C
C      LONG PERIOD PERIODICS
C
      AXN=E*DCOS(OMEGA)
      TEMP=1./(A*BETA*BETA)
      XLL=TEMP*XLCOF*AXN
      AYNL=TEMP*AYCOF
      XLT=XL+XLL
      AYN=E*DSIN(OMEGA)+AYNL
C
C      SOLVE KEPLERS EQUATION
C
      CAPU=FMOD2P(XLT-XNODE)
      TEMP2=CAPU
      DO 130 I=1,10
      SINEPW=DSIN(TEMP2)
      COSEPW=DCOS(TEMP2)
      TEMP3=AXN*SINEPW
      TEMP4=AYN*COSEPW
      TEMP5=AXN*COSEPW
      TEMP6=AYN*SINEPW
      EPW=(CAPU-TEMP4+TEMP3-TEMP2)/(1.-TEMP5-TEMP6)+TEMP2
      IF(ABS(EPW-TEMP2) .LE. E6A) GO TO 140
  130 TEMP2=EPW
C
C      SHORT PERIOD PRELIMINARY QUANTITIES
C
  140 ECOSE=TEMP5+TEMP6
      ESINE=TEMP3-TEMP4
      ELSQ=AXN*AXN+AYN*AYN
      TEMP=1.-ELSQ
      PL=A*TEMP
      R=A*(1.-ECOSE)
      TEMP1=1./R
      IF (A.LT.0.) THEN
        WRITE (*,*) 'A LT 0 AT LINE 551'
        RDOT = 0.
        IFLAG = -1
        RETURN
      ELSE
        RDOT=XKE*DSQRT(A)*ESINE*TEMP1
      ENDIF
      IF (PL.LT.0.) THEN
        WRITE (*,*) 'PL LT 0 AT LINE 557'
	WRITE (*,FMT='(A,F10.2,2F12.5)') 'A,ELSQ,E',A,ELSQ,E
        RFDOT = 0.
        IFLAG = -1
        RETURN
      ELSE
        RFDOT=XKE*DSQRT(PL)*TEMP1
      ENDIF
      TEMP2=A*TEMP1
      IF (TEMP.LT.0.) THEN
        WRITE (*,*) 'TEMP LT 0 AT LINE 564'
        BETAL = 0.
        IFLAG = -1
        RETURN
      ELSE
        BETAL=DSQRT(TEMP)
      ENDIF
      TEMP3=1./(1.+BETAL)
      COSU=TEMP2*(COSEPW-AXN+AYN*ESINE*TEMP3)
      SINU=TEMP2*(SINEPW-AYN-AXN*ESINE*TEMP3)
      U=ACTAN(SINU,COSU)
      SIN2U=2.*SINU*COSU
      COS2U=2.*COSU*COSU-1.
      TEMP=1./PL
      TEMP1=CK2*TEMP
      TEMP2=TEMP1*TEMP
C
C      UPDATE FOR SHORT PERIODICS
C
      RK=R*(1.-1.5*TEMP2*BETAL*X3THM1)+.5*TEMP1*X1MTH2*COS2U
      UK=U-.25*TEMP2*X7THM1*SIN2U
      XNODEK=XNODE+1.5*TEMP2*COSIO*SIN2U
      XINCK=XINCL+1.5*TEMP2*COSIO*SINIO*COS2U
      RDOTK=RDOT-XN*TEMP1*X1MTH2*SIN2U
      RFDOTK=RFDOT+XN*TEMP1*(X1MTH2*COS2U+1.5*X3THM1)
C
C      ORIENTATION VECTORS
C
      SINUK=DSIN(UK)
      COSUK=DCOS(UK)
      SINIK=DSIN(XINCK)
      COSIK=DCOS(XINCK)
      SINNOK=DSIN(XNODEK)
      COSNOK=DCOS(XNODEK)
      XMX=-SINNOK*COSIK
      XMY=COSNOK*COSIK
      UX=XMX*SINUK+COSNOK*COSUK
      UY=XMY*SINUK+SINNOK*COSUK
      UZ=SINIK*SINUK
      VX=XMX*COSUK-COSNOK*SINUK
      VY=XMY*COSUK-SINNOK*SINUK
      VZ=SINIK*COSUK
C
C      POSITION AND VELOCITY
C
      X=RK*UX
      Y=RK*UY
      Z=RK*UZ
      XDOT=RDOTK*UX+RFDOTK*VX
      YDOT=RDOTK*UY+RFDOTK*VY
      ZDOT=RDOTK*UZ+RFDOTK*VZ
C
      RETURN
      END
