	SUBROUTINE DMR_CEN_LIST(CC,RADIUS,NN,LISTPIXEL)
C
C	FIND ALL PIXELS WITH CENTERS WITHIN RADIUS DEGREES OF CC
C	BY FINDING THE NFACE,X,Y POSITION OF CC AND SCANNING OUTWARD
C	IN +X,-X,+Y AND -Y DIRECTIONS UNTIL PIXELS ARE FURTHER THAN RADIUS
C	FROM CC
C	NN IS THE # HIT, AND LISTPIXEL(1...NN) IS THE LIST OF PIXELS
C
C	repaired 9/5/91 to pick up an occasional missed pixel near edge
C	of circle - ELW
C
C	calls DVS - the squared difference between two vectors
C	DMR_PIXNO - vector into pixel number
C	AXISXY - internal pixelize routine
C	EDGCHK - internal pixelize routine
C	DMR_CENPIX - pixel number into vector
C
	INTEGER*4 NN,LISTPIXEL(*)
	REAL*4 CC(3),RADIUS
	REAL*4 CEL(3)
	SAVE /DMRBIT/
	COMMON /DMRBIT/ IX(32),IY(32)
	PARAMETER (MX=32)
	PARAMETER (PI=3.1415927,TWOPI=6.2831853,DTR=57.295779513)
	NN=0
	CALL DMR_PIXNO(CC,NDMR)
	CALL AXISXY(CC,NFACE,X,Y)
	JX=MX*X
	JX=MIN(MX-1,JX)
	JY=MX*Y
	JY=MIN(MX-1,JY)
	DMAX=(2.0*SIN((RADIUS/DTR)/2.0))**2
	JJX=JX		!SAVE X CENTER
	DO IYD=1,2
	  KY=JY-(IYD-1)
	  IDY=3-2*IYD
 	  NXFAIL = 0	! Number y's with NX=0
	  DO WHILE (NXFAIL.LT.2)
C
C	CHECK THE VALUE OF Y -- IF STILL ON THE SAME FACE THEN USE A BIG
C	RANGE IN X, BUT IF Y IS OFF THE FACE, THEN LIMIT X TO BEING ON THE
C	SAME FACE
C
	    IF (KY.GE.0 .AND. KY.LT.MX) THEN
	      KXMIN=-MX
	      KXMAX=2*MX-1
	    ELSE
	      KXMIN=0
	      KXMAX=MX-1
	    ENDIF
	    SUMX=0.
	    NX=0
	    DO IXD=1,2
	      KX=JX-(IXD-1)
	      IDX=3-2*IXD
	      MXFAIL = 0
	      DO WHILE (MXFAIL.LT.2 .AND. KX.GE.KXMIN .AND. KX.LE.KXMAX)
		CALL EDGCHK(NFACE,KX,KY,MX,MFACE,LX,LY)
		NDMR=(MX**2)*MFACE+IX(LX+1)+IY(LY+1)
		CALL DMR_CENPIX(NDMR,CEL)
		D=DVS(CEL,CC)
		IF(D.LT.DMAX) THEN
		  NN=NN+1
		  LISTPIXEL(NN)=NDMR
		  NX=NX+1
		  SUMX=SUMX+KX
		ELSE
		  MXFAIL = MXFAIL+1
		ENDIF
		KX=KX+IDX
	      ENDDO	! INNER X LOOP
	    ENDDO   	! X-DIRECTION LOOP          
C
C	START THE X LOOP AT AVERAGE POSITION FOR PREVIOUS Y
C
	    IF (NX.GT.0) THEN
	      JX=MX+(SUMX/NX)+0.5
	      JX=JX-MX
	    ELSE
	      NXFAIL = NXFAIL+1
	    ENDIF
C
	    KY=KY+IDY
 	  ENDDO		! DO WHILE (NXFAIL.LT.2)
	  JX=JJX	! RECENTER X FOR NEW Y-DIRECTION
	ENDDO 		! DO IYD
	RETURN
	END
