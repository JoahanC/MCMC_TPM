	COMPLEX*16 FUNCTION QMAT(A)
C
C	convert rotation matrix into quaternion
C	use CALL Q2M(Q,A) to go the other way
C
	REAL*4 A(3,3)
	COMPLEX*16 QGEN
	REAL*4 TRACE, TPMM, TMPM, TMMP
	REAL*4 Q1,Q2,Q3,Q4
	REAL*4 FOURQ3,FOURQ2,FOURQ4,FOURQ1
C	from M2Q routine in COBLIB
	TRACE=A(1,1)+A(2,2)+A(3,3)
	TPMM=A(1,1)-A(2,2)-A(3,3)
	TMPM=-A(1,1)+A(2,2)-A(3,3)
	TMMP=A(3,3)-A(2,2)-A(1,1)
	IF(TMMP.GE.MAX(TRACE,TPMM,TMPM)) THEN
	  Q3=.5*SQRT(1.+TMMP)
	  FOURQ3=4.*Q3
	  Q1=(A(1,3)+A(3,1))/FOURQ3
	  Q2=(A(2,3)+A(3,2))/FOURQ3
	  Q4=(A(1,2)-A(2,1))/FOURQ3
	ELSE IF(TMPM.GT.MAX(TRACE,TPMM)) THEN
	  Q2=.5*SQRT(1.+TMPM)
	  FOURQ2=4.*Q2
	  Q1=(A(1,2)+A(2,1))/FOURQ2
	  Q3=(A(3,2)+A(2,3))/FOURQ2
	  Q4=(A(3,1)-A(1,3))/FOURQ2
	ELSE IF(TRACE.GT.TPMM) THEN
	  Q4=.5*SQRT(1.+TRACE)
	  FOURQ4=4.*Q4
	  Q1=(A(2,3)-A(3,2))/FOURQ4
	  Q2=(A(3,1)-A(1,3))/FOURQ4
	  Q3=(A(1,2)-A(2,1))/FOURQ4
	ELSE
	  Q1=.5*SQRT(1.+TPMM)
	  FOURQ1=4.*Q1
	  Q2=(A(1,2)+A(2,1))/FOURQ1
	  Q3=(A(1,3)+A(3,1))/FOURQ1
	  Q4=(A(2,3)-A(3,2))/FOURQ1
	ENDIF
C
	S=SQRT(Q1*Q1+Q2*Q2+Q3*Q3+Q4*Q4)
	IF(ABS(S-1.).GT.0.00001) WRITE(*,*) 'NORM ERROR IN NEW_M2Q',S
C
	QMAT = QGEN(-Q1/S,-Q2/S,-Q3/S,Q4/S)
	RETURN
	END
