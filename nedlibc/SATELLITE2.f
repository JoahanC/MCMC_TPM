	SUBROUTINE SATELLITE2(ABUF1,ABUF2,NT,TIN,LAT,LONG,
	1	AZOUT,ELOUT,DOUT,SEL,SSL,DM)
	CHARACTER*(*) ABUF1,ABUF2
	REAL*8 TIN(NT)
	REAL LAT,LONG
	REAL*4 AZOUT(NT),ELOUT(NT),DOUT(NT),SEL(NT),SSL(NT),DM(NT)
C	satellite.for - reads two line elements and predicts positions of
C	satellites
	REAL*4 R(3),C(3),XYZ(3,14400),OBS(3),UP(3),NORTH(3),
	1	EAST(3),SUN(3)
	REAL*4 PRMT(3,3)
	REAL*8 DTR,T,TWOPI,PI
	REAL*4 PHASE(21)/3.141,2.856,2.598,2.356,2.128,1.913,1.709,
	1	1.516, 1.334, 1.162, 1.000, 0.848, 0.706, 0.574,
	2	0.453, 0.342, 0.244, 0.157, 0.085, 0.030, 0.0001/
	PARAMETER (RE=6378.140,RP=6356.755,RM=6371.0)
	PARAMETER (PI=3.14159265358979)
	PARAMETER (DTR=57.2957795130824,TWOPI=6.28318530717958)
        CALL TTAG(1990,1,1,0,0,0.,T)
	EPOCH = ((TIN(1)+TIN(NT))/2.D0 - T)/(365.25D0*864.D2) + 1990.0
	CALL PREMAT(EPOCH,PRMT)
	DO I=1,3
	  PRMT(I,I) = PRMT(I,I)+1.0
	ENDDO
	CALL SAT_ORBIT(ABUF1,ABUF2,NT,TIN,XYZ)
	DO IT=1,NT
	  T = TIN(IT)
	  CALL SUNPOS(T,R)	! UNIT VECTOR TO SUN in J(2000)
	  CALL MAV(PRMT,R,SUN)	! into current RA+DEC -> SUN
	  DO I=1,3
	    R(I) = XYZ(I,IT)
	  ENDDO
	  RHO = SQRT(DOT(R,R))
C	find Sun-Earth-Satellite angle
	  SES = 0.
	  IF (RHO.GT.1.E-6) THEN
	    CALL NORM(R)
	    CSES = DOT(R,SUN)
	    IF (ABS(CSES).GT.1.0) THEN
	      WRITE (*,*) 'CSES = ',CSES
	    ELSE
	      SES = ACOS(CSES)
	    ENDIF
	  ENDIF
C	find Zenith-Limb angle
	  if (rho.lt.rm) then
C	    write (*,*) 'RHO = ',RHO
	    zl = 0.	! re-entered, so limb is at zenith
	  else
	  ZL = PI-ASIN(RM/RHO)
	  endif
	  SSL(IT) = DTR*(ZL-SES)
	  SIDTIM=GST(T)
C	WRITE (*,FMT='(A,F15.3)') ' GST = ',SIDTIM
	  CT=COS(SIDTIM)
	  ST=SIN(SIDTIM)
C	ROTATE TO EARTH FIXED COORDINATES
	  R(3)=XYZ(3,IT)
	  R(1)=CT*XYZ(1,IT)+ST*XYZ(2,IT)
	  R(2)=CT*XYZ(2,IT)-ST*XYZ(1,IT)
	  TMP = CT*SUN(1)+ST*SUN(2)
	  SUN(2) = CT*SUN(2)-ST*SUN(1)
	  SUN(1) = TMP
C	WRITE (*,903) R
903	FORMAT(3F10.1)
	  TL = TAN(LAT/DTR)
	  OBS(2) = RE/SQRT(1.+(RP*TL/RE)**2)
	  OBS(3) = TL*OBS(2)*(RP/RE)**2
	  OBS(1) = COS(LONG/DTR)*OBS(2)
	  OBS(2) = -SIN(LONG/DTR)*OBS(2)
C	WRITE (*,903) OBS
	  DO I=1,3
	    C(I) = R(I)-OBS(I)
	  ENDDO
	  UP(3) = SIN(LAT/DTR)
	  UP(1) = COS(LONG/DTR)*COS(LAT/DTR)
	  UP(2) = -SIN(LONG/DTR)*COS(LAT/DTR)
C	WRITE (*,903) UP
	  NORTH(3) = 1.
	  NORTH(1) = 0.
	  NORTH(2) = 0.
	  CALL CROSS(NORTH,UP,EAST)
	  CALL NORM(EAST)
	  CALL CROSS(UP,EAST,NORTH)
	  R(3) = DOT(UP,C)
	  R(1) = DOT(NORTH,C)
	  R(2) = DOT(EAST,C)
	  EL = DTR*ATAN2(R(3),SQRT(R(1)**2+R(2)**2))
	  AZ = DTR*ATAN2(R(2),R(1))
	  IF (AZ.LT.0.) AZ=AZ+360
	  DIST = SQRT(DOT(C,C))
C	WRITE (*,903) AZ,EL,DIST
	  AZOUT(IT) = AZ
	  ELOUT(IT) = EL
	  DOUT(IT) = DIST
	  SEL(IT) = DTR*ASIN(DOT(UP,SUN))
	  CALL NORM(C)
	  CSS = 10.0*(DOT(C,SUN)+1.0)
	  IPH = CSS
	  XPH = CSS-IPH
	  PH = PHASE(IPH+1)+XPH*(PHASE(IPH+2)-PHASE(IPH+1))
	  DM(IT) = 5.0*ALOG10(DIST/1000.)-2.5*ALOG10(PH)
	ENDDO	! IT=1,NT
	RETURN
	END
