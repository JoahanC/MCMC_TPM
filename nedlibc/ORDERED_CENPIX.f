	SUBROUTINE ORDERED_CENPIX(JPIX,IRES,E)
C
C	convert lat-long ordered pixel number JPIX into pixel center
C	unit vector E
C	NPIX = number of pixels = 12*4**IRES
C	range of JPIX: 0..NPIX-1
C	range of IRES: 0..13
C
	REAL*8 TWOPI,PI,PIOVER2,PIOVER4
	PARAMETER (TWOPI = 6.28318530717958D0)
	PARAMETER (PI = 3.14159265358979D0)
	PARAMETER (PIOVER2 = 1.5707963267949D0)
	PARAMETER (PIOVER4 = 0.785398163397448D0)
	INTEGER JPIX
	INTEGER IRES
	REAL*4 E(3)
	COMMON /JPIX2IPIX/ JRES,N,ILT(0:32768)
	DATA JRES /0/
	IF (IRES.LT.0 .OR. IRES.GT.13) STOP 
	1	'IRES out of range in ORDERED_CENPIX'
	IF (IRES.NE.JRES) THEN
C	  compute ILT for this res
	  N = 2**IRES
	  DO ILAT = 0,4*N-1
	    IF (ILAT.LE.N) THEN
	      ILT(ILAT) = 2*ILAT*(ILAT+1)
	    ELSE IF (ILAT.LE.3*N) THEN
	      ILT(ILAT) = 4*N*(ILAT-N) + 2*N*(N+1)
	    ELSE
	      ILT(ILAT) = N*(2+10*N) + 2*(ILAT-3*N)*(N-1 + (N-(ILAT-3*N)))
	    ENDIF
	  ENDDO
	  JRES = IRES
	ENDIF
C	normal entry point
	NPIX = 12*N**2
	IF (JPIX.LT.0 .OR. JPIX.GE.NPIX) STOP 
	1	'JPIX out of range in ORDERED_CENPIX'
	ILL = 0
	ILH = 4*N-2
C	binary search for table entry
100	IT = (ILL+ILH)/2
	IF (JPIX.LT.ILT(IT)) THEN
	  ILH = IT-1
	  GO TO 100
	ENDIF
	IF (JPIX.GE.ILT(IT+1)) THEN
	  ILL = IT+1
	  GO TO 100
	ENDIF
	ILAT = IT
	ILONG = JPIX-ILT(ILAT)
	IF (ILAT.LT.N) THEN
	  NLONG = 4*(ILAT+1)
	  IHALF = 1
	ELSE IF (ILAT.LT.3*N) THEN
	  NLONG = 4*N
	  IHALF = MOD(ILAT,2)
	ELSE
	  NLONG = 4*(4*N-(ILAT+1))
	  IHALF = 1
	ENDIF
	Y = (4.-8.*(ILAT+1.0)/(4*N))/3.
	ALONG = TWOPI*(ILONG + 0.5*IHALF)/NLONG
	YA = ABS(Y)
	IF (YA.LE.(2./3.)) THEN
	  E(3) = Y
	  COSLAT = SQRT(1.-E(3)**2)
	ELSE
	  SINLAT = 2*YA-0.75*YA**2-1./3.
	  COSLAT = SQRT((1.+SINLAT)/12.)*(4-3.*YA)
	  E(3) = SIGN(SINLAT,Y)
	ENDIF
	E(1) = COSLAT*COS(ALONG)
	E(2) = COSLAT*SIN(ALONG)
	RETURN
	END
