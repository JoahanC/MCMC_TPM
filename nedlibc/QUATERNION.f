C	QUATRNION.FTN	ROUTINES TO MANIPULATE QUATERNIONS

	SUBROUTINE QXQ(P,Q,R)
C
C	PRODUCT OF TWO QUATERNIONS P*Q -> R
	REAL*4 P(4),Q(4),R(4)
C
C	ORDER OF COMPONENTS:	i,j,k,1
C	Reminder: 1*1=1; i*i=j*j=k*k=-1
C	1*i=i;  1*j=j;  1*k=k;
C	i*j=-j*i=k;  j*k=-k*j=i; k*i=-i*k=j
C
	R(1)=P(4)*Q(1)+Q(4)*P(1)+P(2)*Q(3)-Q(2)*P(3)
	R(2)=P(4)*Q(2)+Q(4)*P(2)+P(3)*Q(1)-Q(3)*P(1)
	R(3)=P(4)*Q(3)+Q(4)*P(3)+P(1)*Q(2)-Q(1)*P(2)
	R(4)=P(4)*Q(4)-P(1)*Q(1)-P(2)*Q(2)-P(3)*Q(3)
	RETURN
	END

	SUBROUTINE QINV(P,PINV)
C
C	COMPUTES 1/P -> PINV FOR QUATERNIONS
C
	REAL*4 P(4),PINV(4)
	PP=P(1)**2+P(2)**2+P(3)**2+P(4)**2
	PINV(1)=-P(1)/PP
	PINV(2)=-P(2)/PP
	PINV(3)=-P(3)/PP
	PINV(4)=P(4)/PP
	RETURN
	END

	SUBROUTINE QPQ(P,Q,R)
C
C	QUATERNION SUM P+Q -> R
	REAL*4 P(4),Q(4),R(4)
	DO 10 I=1,4
10	R(I)=P(I)+Q(I)
	RETURN
	END

	SUBROUTINE RXQ(SCALAR,Q,R)
C
C	REAL SCALAR*Q -> R
	REAL*4 SCALAR,Q(4),R(4)
	DO 10 I=1,4
10	R(I)=SCALAR*Q(I)
	RETURN
	END

	SUBROUTINE M2Q(A,Q)
C
C	CONVERTS ROTATION MATRIX A INTO QUATERNION Q
C
	REAL*4 A(3,3),Q(4)
C
	TRACE=A(1,1)+A(2,2)+A(3,3)
	TPMM=A(1,1)-A(2,2)-A(3,3)
	TMPM=-A(1,1)+A(2,2)-A(3,3)
	TMMP=A(3,3)-A(2,2)-A(1,1)
	IF(TMMP.GE.MAX(TRACE,TPMM,TMPM)) THEN
	  Q3=.5*SQRT(1.+TMMP)
	  FOURQ3=4.*Q3
	  Q1=(A(1,3)+A(3,1))/FOURQ3
	  Q2=(A(2,3)+A(3,2))/FOURQ3
	  Q4=(A(1,2)-A(2,1))/FOURQ3
	ELSE IF(TMPM.GT.MAX(TRACE,TPMM)) THEN
	  Q2=.5*SQRT(1.+TMPM)
	  FOURQ2=4.*Q2
	  Q1=(A(1,2)+A(2,1))/FOURQ2
	  Q3=(A(3,2)+A(2,3))/FOURQ2
	  Q4=(A(3,1)-A(1,3))/FOURQ2
	ELSE IF(TRACE.GT.TPMM) THEN
	  Q4=.5*SQRT(1.+TRACE)
	  FOURQ4=4.*Q4
	  Q1=(A(2,3)-A(3,2))/FOURQ4
	  Q2=(A(3,1)-A(1,3))/FOURQ4
	  Q3=(A(1,2)-A(2,1))/FOURQ4
	ELSE
	  Q1=.5*SQRT(1.+TPMM)
	  FOURQ1=4.*Q1
	  Q2=(A(1,2)+A(2,1))/FOURQ1
	  Q3=(A(1,3)+A(3,1))/FOURQ1
	  Q4=(A(2,3)-A(3,2))/FOURQ1
	ENDIF
C
	S=SQRT(Q1*Q1+Q2*Q2+Q3*Q3+Q4*Q4)
	IF(ABS(S-1.).GT.0.00001) WRITE (*,*) 'NORM ERROR IN NEW_M2Q'
	Q(1)=-Q1/S
	Q(2)=-Q2/S
	Q(3)=-Q3/S
	Q(4)=Q4/S
C
	RETURN
	END
